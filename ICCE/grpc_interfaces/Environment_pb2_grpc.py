# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import Environment_pb2 as Environment__pb2


class EnvironmentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.handshake_and_validate = channel.unary_unary(
                '/Environment.Environment/handshake_and_validate',
                request_serializer=Environment__pb2.HandshakeRequest.SerializeToString,
                response_deserializer=Environment__pb2.HandshakeResponse.FromString,
                )
        self.start_simulation = channel.unary_unary(
                '/Environment.Environment/start_simulation',
                request_serializer=Environment__pb2.StartRequest.SerializeToString,
                response_deserializer=Environment__pb2.StartResponse.FromString,
                )
        self.get_env_data = channel.unary_unary(
                '/Environment.Environment/get_env_data',
                request_serializer=Environment__pb2.EnvDataRequest.SerializeToString,
                response_deserializer=Environment__pb2.EnvDataResponse.FromString,
                )
        self.set_action_data = channel.unary_unary(
                '/Environment.Environment/set_action_data',
                request_serializer=Environment__pb2.ActionRequest.SerializeToString,
                response_deserializer=Environment__pb2.ActionResponse.FromString,
                )


class EnvironmentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def handshake_and_validate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_simulation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_env_data(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_action_data(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvironmentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'handshake_and_validate': grpc.unary_unary_rpc_method_handler(
                    servicer.handshake_and_validate,
                    request_deserializer=Environment__pb2.HandshakeRequest.FromString,
                    response_serializer=Environment__pb2.HandshakeResponse.SerializeToString,
            ),
            'start_simulation': grpc.unary_unary_rpc_method_handler(
                    servicer.start_simulation,
                    request_deserializer=Environment__pb2.StartRequest.FromString,
                    response_serializer=Environment__pb2.StartResponse.SerializeToString,
            ),
            'get_env_data': grpc.unary_unary_rpc_method_handler(
                    servicer.get_env_data,
                    request_deserializer=Environment__pb2.EnvDataRequest.FromString,
                    response_serializer=Environment__pb2.EnvDataResponse.SerializeToString,
            ),
            'set_action_data': grpc.unary_unary_rpc_method_handler(
                    servicer.set_action_data,
                    request_deserializer=Environment__pb2.ActionRequest.FromString,
                    response_serializer=Environment__pb2.ActionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Environment.Environment', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Environment(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def handshake_and_validate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Environment.Environment/handshake_and_validate',
            Environment__pb2.HandshakeRequest.SerializeToString,
            Environment__pb2.HandshakeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def start_simulation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Environment.Environment/start_simulation',
            Environment__pb2.StartRequest.SerializeToString,
            Environment__pb2.StartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_env_data(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Environment.Environment/get_env_data',
            Environment__pb2.EnvDataRequest.SerializeToString,
            Environment__pb2.EnvDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_action_data(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Environment.Environment/set_action_data',
            Environment__pb2.ActionRequest.SerializeToString,
            Environment__pb2.ActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
